(page "index.html")

(set! cljs.core/*print-fn* #(.log js/console %))

(def windowInnerWidth (cell window.innerWidth))
(def innerWidth (cell= (max 500 windowInnerWidth)))
(def windowInnerHeight (cell window.innerHeight))
(def innerHeight (cell= (max 500 windowInnerHeight)))

(defn resize []
      (reset! windowInnerWidth window.innerWidth)
      (reset! windowInnerHeight window.innerHeight)
      )

(set! (.-onresize js/window) resize)

(defn fullscreen []
      (let [e (.getElementById js/document "me")]
           (if (.-requestFullscreen e)
             (.requestFullscreen e))
           (if (.-msRequestFullscreen e)
             (.msRequestFullScreen e))
           (if (.-mozRequestFullScreen e)
             (.mozRequestFullScreen e))
           (if (.-webkitRequestFullscreen e)
             (.webkitRequestFullscreen e))
           ))

(def yellowed (cell false))

(html
  (head
    (link :href "app.css" :rel "stylesheet"))
  (body
    (div :id "me" :css(cell= {:width (- innerWidth 40)
                              :background-color "lightgrey"})
         (h1 "Hello, Hoplon! How are you these days?")
         (hr :css(cell= {:width 100}))
         (hr :css(cell= {:width (- innerWidth 40)}))
         (p "windowInnerWidth: " windowInnerWidth ", windowInnerHeight: " windowInnerHeight)
         (p "innerWidth: " innerWidth ", innerHeight: " innerHeight)
         (p "(Minimum inner width and height are 500.)")
         (p "This is some text, which isn't much. It is just text. So do not bother to read this. It is only text.")
         (table
           (col :width 50)
           (col :width (cell= (- innerWidth 90)))
           (tr
             (td "hi")
             (td
               :css {:border "2px solid #73AD21"}
               "Fred. How goes it? Are you feeling good?"))
           )
         )
    (br)
    (button :click fullscreen "full screen")
    (br)(br)
    (button :click #(.write js/document "Hello world!") "overwrite document")
    (br)(br)
    (button :click
            #(do
              (reset! yellowed true)
              (.css (js/jQuery "p") "backgroundColor" "yellow"))
            :disabled yellowed
            "yellow p")
    " "
    (button :click
            #(do
              (reset! yellowed false)
              (.css (js/jQuery "p") "backgroundColor" ""))
            :disabled (cell= (not yellowed))
            "unyellow p")
    ))
