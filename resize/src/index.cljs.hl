(page "index.html")

(set! cljs.core/*print-fn* #(.log js/console %))

(def screenWidth (cell (aget (aget js.window "screen") "width")))
(def screenHeight (cell (aget (aget js.window "screen") "height")))
(def windowInnerWidth (cell window.innerWidth))
(def innerWidth (cell= (max 500 (- windowInnerWidth 40))))
(def windowInnerHeight (cell window.innerHeight))
(def innerHeight (cell= (max 500 (- windowInnerHeight 40))))

(def isFullScreen (cell= (= windowInnerHeight screenHeight)))

(defn resize []
      (reset! screenWidth (aget (aget js.window "screen") "width"))
      (reset! screenHeight (aget (aget js.window "screen") "height"))
      (reset! windowInnerWidth window.innerWidth)
      (reset! windowInnerHeight window.innerHeight)
      )

(set! (.-onresize js/window) resize)

(defn fullscreen []
      (let [e (.getElementById js/document "me")]
           (if (.-requestFullscreen e)
             (.requestFullscreen e))
           (if (.-msRequestFullscreen e)
             (.msRequestFullScreen e))
           (if (.-mozRequestFullScreen e)
             (.mozRequestFullScreen e))
           (if (.-webkitRequestFullscreen e)
             (.webkitRequestFullscreen e))
           ))

(def yellowed (cell false))

(def images ["1.jpg" "2.jpg" "3.jpg" "4.jpg" "5.jpg"])
(def image-index (cell 0))
(.setInterval js/window #(swap! image-index (fn [old] (rem (inc old) 5))) 3000)

(html
  (head
    (link :href "app.css" :rel "stylesheet"))
  (body
    (div :id "me" :css (cell= {:width            innerWidth
                               :background-color "lightgrey"})
         (h1 "Hello, Hoplon! How are you these days?")
         (hr :css (cell= {:width 100}))
         (hr :css (cell= {:width innerWidth}))
         (p "screenWidth: " screenWidth ", screenHeight: "screenHeight)
         (p "windowInnerWidth: " windowInnerWidth ", windowInnerHeight: " windowInnerHeight)
         (p "innerWidth: " innerWidth ", innerHeight: " innerHeight)
         (p "(Minimum inner width and height are 500.)")
         (p "This is some text, which isn't much. It is just text. So do not bother to read this. It is only text.")
         (table
           (col :width 50)
           (col :width (cell= (- innerWidth 50)))
           (tr
             (td "hi")
             (td
               :css {:border "2px solid #73AD21"}
               "Fred. How goes it? Are you feeling good?"))
           )
         (br)
         (button :click fullscreen
                 :disabled isFullScreen
                 "full screen")
         (br) (br)
         (button :click #(.write js/document "Hello world!") "overwrite document")
         (br) (br)
         (table (tr
                  (td
                    (button :click
                            #(do
                              (reset! yellowed true)
                              (.css (js/jQuery "p") "backgroundColor" "yellow"))
                            :disabled yellowed
                            "yellow p"))
                  (td
                    (div
                      :slide-toggle yellowed
                      :css {:display "none"}
                      (button :click
                              #(do
                                (reset! yellowed false)
                                (.css (js/jQuery "p") "backgroundColor" ""))
                              "unyellow p")))
                  ))
         (div
           :slide-toggle (cell= (not isFullScreen))
           (img :src (cell= (images image-index)) :width (cell= innerWidth) :height (cell= (quot innerWidth 2))))
         )))
